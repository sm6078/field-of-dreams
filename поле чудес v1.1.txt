Перед тем как выполнить этап, прочтите все требования этапа!
1) Подготовительный этап:

1.Создать обычный проект Intellij idea (не maven или gradle) * использование других библиотек не допускается, только JDK.
2.Создать пакет org.javaacadmey.wonderfield и в нем класс Runner. Класс Runner будет создавать и запускать игру.
3.Создайте класс Game. Game хранит в себе константы: количество игроков - 3, всего количество раундов - 4, групповых раундов - 3, индекс финального раунда - 3
4. Для чтения ответов из консоли (ДЛЯ ВСЕХ КЛАССОВ!) у нас будет единый Scanner. Создай статическое поле scanner читающий из консоли ввод данных. 
5.Создайте метод внутри Game - init. Он будет отвечать за инициализацию игры. Первоначально нам нужен перечень вопросов и ответов к игре, поэтому выведите на экран:
"Запуск игры "Поле Чудес" - подготовка к игре. Вам нужно ввести вопросы и ответы для игры."
"Введите вопрос #1"
Пользователь вводит вопрос в консоль, мы сохраняем в переменную. Далее выводите:
"Введите ответ вопрос #1"
Вопросы и ответы должны получится для всех раундов (четырех).
После ввода ответов и вопросов печатается: "Иницализация закончена, игра начнется через 5 секунд"
Игра засыпает на 5 секунд. После чего делается 50 пустых строк.
Экземпляр класса Game должен содержать в себе массив/ы с вопросами и ответами.
Внимание: на этапе написания приложения нужно будет неоднократно запускать приложение. 
Для того чтобы при запуске не вводить эти данные, можно после корректной реализации закомментировать метод из 5 пункта, и написать реализацию с уже созданными вопросами и ответами (зашитыми в коде).

2) Создание табло
1. Создать класс Tableau, с атрибутами: правильный ответ, и буквы на табло.
2. Создать метод инициализации табло - записывает правильный ответ, и делает пустой массив с размерностью ответа который записывается в буквы на табло.
3. Табло умеет отображать в консоли все буквы в формате: " _  _ А _ _ К " . "_" - для неотгаданных букв, отгаданные буквы в верхнем регистре
4. Табло умеет открывает букву(ы). 
5. Табло умеет открывать слово целиком.
6. Табло имеет функцию "Содержит неизвестные буквы" - если есть неразгаданные буквы - вернет истину, иначе ложь.
7. Создать метод проверку проверяющий что атрибуты не пусты. Использовать этот метод в пунктах 3,4.
8. Добавить табло в класс игра.

3) Этап: Создание игрока. Создать пакет player.
1. Создать класс Игрок имееющий поля: имя, город.
2. Игрок умеет кричать букву: Происходит ввод с консоли буквы, после чего вывод на экран "Игрок (имя игрока): буква (буква из консоли)". Должна быть только одна буква из русского алфавита. В ином случае, вывод в консоль: Ошибка! это не русская буква, введите русскую букву и снова ввод новой буквы, до тех пор пока не введет русскую букву. Действие должно возвращать букву.
3. Игрок умеет говорить слово: "Игрок (имя игрока): слово (слово из консоли)"
4. Создать класс PlayerAnswer (ответ игрока), содержащий два поля - тип ответа(слово или буква) и сам ответ. 
5. Игрок умеет ходить.
 Вывод на экран: "Ход игрока имя, город"
 Для этого в консоле печатается: "Если хотите букву нажмите 'б' и enter, если хотите слово нажмите 'c' и enter". 
 После ввода типа ответа, вызываются соответствующие методы.
 Введенные данные внести в PlayerAnswer и вернуть как результат работы метода. 
 В случае неверного ввода, вывести "Некорректное значение, введите 'б' или 'с'", и снова запросить значение.

4) Этап: Создание Якубовича
1. Создать класс Yakubovich
2. Должен уметь начинать шоу: Якубович: Здравствуйте, уважаемые дамы и господа! Пятница! В эфире капитал-шоу «Поле чудес»!
3. Прощаться: Якубович: Мы прощаемся с вами ровно на одну неделю! Здоровья вам, до встречи!
4. Приглашать тройку игроков (придет список игроков и номер раунда).
Если это не финальный раунд: "Якубович: приглашаю (номер тройки) тройку игроков: (имена участников через запятую)". Имена придут в виде массива строк. Написать метод соединения строк в одну строку с запятыми.
Если это финальный раунд: "Якубович: приглашаю победителей групповых этапов: (имена участников) через запятую".
5. Задавать вопрос раунда: "Якубович: Внимание вопрос! (текст вопроса с новой строки)"
6. Кричать, в случае победы игрока (придет имя, город, и признак "финальный раунд или нет"):
Если не финальный раунд: "Якубович: Молодец! (имя) из (город) проходит в финал!"
Если финальный раунд: "Якубович: И перед нами победитель Капитал шоу поле чудес! Это (имя) из (город)"
7.Проверять ответ игрока (на вход ответ игрока, ответ, табло):
Если переданная буква есть в ответе: "Якубович: Есть такая буква, откройте ее!". 
Если буквы нет: "Якубович: Нет такой буквы! Следующий игрок, крутите барабан!".
На следующей строке "__________________________________"

Проверять слово:
Если переданное слово правильно: "Якубович: (слово)! Абсолютно верно!". 
Если переданное слово неверно: "Якубович: Неверно! Следующий игрок!"
На следующей строке "__________________________________"

8. В экземпляре класса Game должно появится новое поле типа Yakubovich. Якубович появляется при создании игры.


5) Этап: Создание логики игры
1. Создать поле winners - победители первых трех раундов.
2. Создать метод который создает игроков. В Консоль выводится: "Игрок №1 представьтесь: имя,город. Например: Иван,Москва". Считываете ответ из консоли и создаете игрока. В результате создается массив из трех игроков, который возвращается.
3. Создать метод который вытащит все имена игроков в массив.
4. Создать метод проверки табло: если табло полностью заполнено, тогда возвращать истину. По сути это означает, что игрок победил.
5. Создать метод хода игрока (на вход вопрос и игрок), на выход булево:  игрок ходит до тех пор, пока он либо не выиграл (возвращается истина), либо не ошибся (возвращается ложь). Если игрок отгадал букву, то должно появится обновленное табло. 
6. Создать метод "сыграть раунд": игроки ходят по очереди и пытаются отгадать вопрос, до победы одно из игроков. Если игрок победил в не финальном раунде, то заносится в массив победителей. Когда победитель найден, якубович кричит о победе.
7. создать метод "сыграть все групповые раунды":
Играются три раунда.
В каждом раунде создаются игроки.
На табло добавляется ответ.
Якубович приглашает игроков.
Якубович спрашивает вопрос.
Появляется табло.
Играется групповой раунд.
8. Создать метод "сыграй финальный раунд"
На табло добавляется ответ.
Якубович приглашает победителей.
Якубович спрашивает вопрос.
Появляется табло.
Играется финальный раунд.

9. Создать метод старт:
Якубович приветствует всех.
Отыгрываются групповые раунды
Отыгрывается финальный раунд
Якубович прощается

Внимание: на этапе написания приложения нужно будет неоднократно запускать приложение. 
Для того чтобы при запуске не вводить эти данные, можно после корректной реализации закомментировать метод из 2 пункта, и написать реализацию с уже созданными вопросами и ответами (зашитыми в коде).



Если показалось легко
6) Этап: Создание барабана и очков игроков
1. Создать барабан с перечнем значений от 100 до 1200 с шагом в 100. + сектор умножения на 2, + сектор пропуска хода.
2. Игроки при каждом ходе вращают барабан и набирают очки. Победитель в конце узнает свои очки.

Если и этого мало
7) Этап: создание 3 шкатулок и супер игры
1. При отгадывании 3 букв подряд одним игроком, должны появится шкатулки. Одна с деньгами, другая без. У игрока должен быть выбор одной из шкатулок. Если получит деньги, то должен сохранить у себя их.
2. При инициализации добавляется супервопрос.
2. Победитель попадает в супер игру. Где сначала на свои баллы выбирает вещи (список вещей и их стоимость придумываете сами). 
Потом ему предлагается сыграть в супер игру. Ему случайно должна выпасть какой то супер подарок (создать список супер подарков). 
Если соглашается играть в супер игру:
Называет 3 буквы из потенциального вопроса. Игрок должен отгадать вопрос. Если отгадывает то перечисляются все вещи которые он выиграл (и даже деньги) + рандомная вещь.

Если не соглашается играть в супер игру:
перечисляются все вещи которые он выиграл (и даже деньги)
Потом Якубович говорит что за секретная вещь была.

